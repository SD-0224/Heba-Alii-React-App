{"ast":null,"code":"var _jsxFileName = \"/Users/hebaali/my-react-project/src/Header/DarkMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DarkeMode() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const darkMode = localStorage.getItem(\"darkMode\");\n    setIsDarkMode(darkMode === true);\n  }, []);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  useEffect(() => {\n    document.body.classList.toggle(\"dark-mode\", isDarkMode);\n    localStorage.setItem(\"darkMode\", isDarkMode);\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"toggle-button\",\n      className: \"header-buttons\",\n      onClick: toggleDarkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"mode-icon\",\n        className: \"mode-icon-moon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), isDarkMode ? \"Light Mode\" : \"Dark Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DarkeMode, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = DarkeMode;\nexport default DarkeMode;\nvar _c;\n$RefreshReg$(_c, \"DarkeMode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DarkeMode","_s","isDarkMode","setIsDarkMode","darkMode","localStorage","getItem","toggleDarkMode","document","body","classList","toggle","setItem","children","id","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hebaali/my-react-project/src/Header/DarkMode.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nfunction DarkeMode() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const darkMode = localStorage.getItem(\"darkMode\");\n    setIsDarkMode(darkMode === true);\n  }, []);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  useEffect(() => {\n    document.body.classList.toggle(\"dark-mode\", isDarkMode);\n    localStorage.setItem(\"darkMode\", isDarkMode);\n  }, [isDarkMode]);\n\n  return (\n    <>\n      <button\n        id=\"toggle-button\"\n        className=\"header-buttons\"\n        onClick={toggleDarkMode}\n      >\n        <span id=\"mode-icon\" className=\"mode-icon-moon\"></span>\n        {isDarkMode ? \"Light Mode\" : \"Dark Mode\"}\n      </button>\n    </>\n  );\n}\n\nexport default DarkeMode;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnDC,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjDH,aAAa,CAACC,QAAQ,KAAK,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EACDP,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAET,UAAU,CAAC;IACvDG,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEV,UAAU,CAAC;EAC9C,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MACEiB,EAAE,EAAC,eAAe;MAClBC,SAAS,EAAC,gBAAgB;MAC1BC,OAAO,EAAET,cAAe;MAAAM,QAAA,gBAExBhB,OAAA;QAAMiB,EAAE,EAAC,WAAW;QAACC,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACtDlB,UAAU,GAAG,YAAY,GAAG,WAAW;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC,gBACT,CAAC;AAEP;AAACnB,EAAA,CA3BQD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA6BlB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}